name: Build

on: [push, pull_request]

jobs:
  linux:
    name: Build (${{ matrix.os }}, OTP-${{ matrix.otp_version }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        otp_version: [20, 21, 22, 23, 24]
        os: [ubuntu-latest]

    container:
      image: erlang:${{ matrix.otp_version }}

    env:
      STOCKFISH_VERSION: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Extract branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Install Stockfish
      run: |
        rm -fr ${HOME}/stockfish-${STOCKFISH_VERSION}-linux
        rm -f ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip
        curl https://stockfishchess.org/files/stockfish-${STOCKFISH_VERSION}-linux.zip -o ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip
        unzip ${HOME}/stockfish-${STOCKFISH_VERSION}-linux.zip -d ${HOME}
        chmod +x ${HOME}/stockfish-${STOCKFISH_VERSION}-linux/Linux/stockfish_${STOCKFISH_VERSION}_x64
    - name: Cache Dialyzer PLTs
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/rebar3/rebar3_*_plt
          _build/default/rebar3_*_plt
        key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-otp-${{ matrix.otp_version }}-plt-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.config')) }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-otp-${{ matrix.otp_version }}-plt-
    - name: Cache Hex packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-otp-${{ matrix.otp_version }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-otp-${{ matrix.otp_version }}-hex-
    - name: Compile
      run: rebar3 compile
    - name: CT tests
      run: |
        export UCI_ENGINE_PATH=${HOME}/stockfish-${STOCKFISH_VERSION}-linux/Linux/stockfish_${STOCKFISH_VERSION}_x64
        rebar3 ct
    - name: Dialyzer
      run: rebar3 dialyzer
    - name: Code coverage
      run: rebar3 cover
    - name: Generate coverage report
      run: rebar3 covertool generate
    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash) -f _build/test/covertool/binbo.covertool.xml


  macos:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [macos-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Extract branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Install Erlang
      run: brew install erlang
    - name: Install rebar3
      run: brew install rebar3
    - name: Install Stockfish
      run: brew install stockfish
    - name: Cache Hex packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-hex-
    - name: Compile
      run: rebar3 compile
    - name: CT tests
      run: |
        export UCI_ENGINE_PATH=/usr/local/bin/stockfish
        rebar3 ct
    - name: Code coverage
      run: rebar3 cover


  windows:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: powershell

    strategy:
      matrix:
        os: [windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Erlang
      run: choco install erlang -y
    - name: Install rebar3
      run: choco install rebar3 -y
    - name: Install Stockfish
      run: |
        Invoke-WebRequest -Uri https://stockfishchess.org/files/stockfish-11-win.zip -OutFile ~/stockfish-11-win.zip
        Expand-Archive -LiteralPath '~/stockfish-11-win.zip' -DestinationPath ~/
        ls ~/stockfish-11-win/Windows
    - name: Cache Hex packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.extract_branch.outputs.branch }}-hex-
    - name: Compile
      run: rebar3 compile
    - name: CT tests
      run: |
        $env:UCI_ENGINE_PATH = (Resolve-Path '~/stockfish-11-win/Windows/stockfish_20011801_x64.exe').Path.replace('\', '/')
        echo "UCI_ENGINE_PATH=$env:UCI_ENGINE_PATH"
        rebar3 ct
    - name: Code coverage
      run: rebar3 cover
